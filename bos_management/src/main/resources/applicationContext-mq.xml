<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core.xsd ">

    <!-- ActiveMQ 链接工厂 -->
    <!-- 真正可以产生Connection的ConnectionFactory,由对应的jms厂商服务厂商提供 -->
    <!-- 如果连接网络:tcp://ip:61616; 未连接网络:tcp://localhost:61616 以及用户名,密码 -->

    <!--  会卡住报错<amq:connectionFactory id="amqConnectionFactory" brokerURL="tcp://localhost:61616" userName="admin"-->
                           <!--password="admin"/>-->
    <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616"/>
        <property name="password" value="admin"/>
        <property name="userName" value="admin"/>
    </bean>

    <!-- spring caching连接工厂 -->
    <!-- spring用于管理真正的ConnectionFactory的connectionFactory -->
    <bean id="mqConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="amqConnectionFactory"/>
        <!-- 同上,同理 -->
        <!--<constructor-arg ref="amqConnectionFactory"/>-->
        <!-- session的缓存数量 -->
        <property name="sessionCacheSize" value="100"/>
    </bean>

    <!-- Spring JmsTemplate 的消息生产者 start-->

    <!-- 定义JmsTemplate的 Queue类型 -->
    <bean name="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的spring提供的那个ConnectionFactory对象-->
        <constructor-arg ref="mqConnectionFactory"/>
        <!-- 非pub/sub模型 (发布/订阅),即队列模式 -->
        <property name="pubSubDomain" value="false"/>
    </bean>

    <!-- 定义JmsTemplate的 Topic类型 -->
    <bean name="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <!-- 这个connectionFactory对应的是我们定义的spring提供的那个ConnectionFactory对象-->
        <constructor-arg ref="mqConnectionFactory"/>
        <!-- 非pub/sub模型 (发布/订阅),即队列模式 -->
        <property name="pubSubDomain" value="true"/>
    </bean>

    <!-- Spring JmsTemplate 的消息生产者 end-->
</beans>